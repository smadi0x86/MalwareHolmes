package Malware.logic;

public class SignatureIdentifier {

    /*
     * This works with SignatureDatabase.java to compare the hash of the user input file to the hash of the signature in the database.
     * This class is responsible for identifying whether a given hash corresponds to any known malware signatures.
     * The SignatureIdentifier class encapsulates the logic for comparing the input file hash with the stored malware hashes in the SignatureDatabase.
     * It takes a SignatureDatabase object as a dependency and provides a method to check if a given hash exists in the database and returns the associated malware name if found.
    */

    private SignatureDatabase signatureDatabase;

    public SignatureIdentifier(SignatureDatabase signatureDatabase) {
        this.signatureDatabase = signatureDatabase;
    }

    // This method takes a hash as a parameter from the MalwareAnalyzer class and compares it to the hashes in the database.
    public void compareHash(String hash) {

        String malwareName = signatureDatabase.getMalwareNameByHash(hash);

        if (malwareName != null && !malwareName.isEmpty()) {
            System.out.println("[!] Calling FBI, It's a malware called: " + malwareName);
            System.out.println();
        } else {
            System.out.println("[!] File not recognized as malware or the malware author is too good!");
        }
    }
}