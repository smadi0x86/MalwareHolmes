package Malware.logic;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.exceptions.JedisConnectionException;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.Closeable;

public class SignatureDatabase implements Closeable {

    private Jedis jedis;

    public SignatureDatabase() {
        try {
            System.out.println("[INFO] Connecting to Redis server...");
            jedis = new Jedis("localhost", 6379);
            jedis.ping(); // Test connection
        } catch (JedisConnectionException e) {
            System.err.println(
                    "[ERROR] Unable to connect to Redis server. Please ensure that the server is running and accessible.");
            jedis = null;
        }
    }

    public void loadSignaturesFromFile(String filePath) {
        if (jedis == null) {
            System.err.println("[ERROR] No connection to Redis. Unable to load signatures from file.");
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    String hash = parts[0].trim();
                    String malwareName = parts[1].trim();
                    jedis.set(hash, malwareName);
                    jedis.incr("total_signatures"); // Increment the count of total signatures
                }
            }
        } catch (IOException e) {
            System.err.println("[ERROR] Error reading from signature file: " + e.getMessage());
        }
    }

    public String getMalwareNameByHash(String hash) {
        if (jedis == null) {
            System.err.println("[ERROR] No connection to Redis. Unable to retrieve malware name by hash.");
            return null;
        }
        String malwareName = jedis.get(hash);
        if (malwareName != null) {
            jedis.incr("total_detected"); // Increment the count of total detections
        }
        return malwareName;
    }

    public void printStatistics() {
        if (jedis == null) {
            System.err.println("[ERROR] No connection to Redis. Unable to print statistics.");
            return;
        }
        System.out.println("[INFO] Total signatures: " + jedis.get("total_signatures"));
        System.out.println("[INFO] Total detected: " + jedis.get("total_detected"));
    }

    @Override
    public void close() throws IOException {
        if (jedis != null) {
            jedis.close();
            System.out.println("[INFO] Connection to Redis server closed.");
        }
    }
}
