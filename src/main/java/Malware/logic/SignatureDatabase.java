package Malware.logic;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;

public class SignatureDatabase {

    /*
     * This will use a hashmap to store the hashes of known malware from the malware_hashes.csv file.
     * It provides methods to load the signatures from the malware_hashes.csv and retrieve the stored hashes for comparison.
     * The SignatureDatabase class encapsulates the collection of signatures as a private data member and provides methods to load and retrieve the signatures.
    */

    private HashMap<String, String> signatures;

    public SignatureDatabase() {
        signatures = new HashMap<>();
    }

    public void loadSignaturesFromFile(String filePath) throws IOException, FileNotFoundException {

        BufferedReader reader = new BufferedReader(new FileReader(filePath)); // ? read the malware_hashes.csv file.
        {

            String line;

            while ((line = reader.readLine()) != null) {
                // This is an indicator that the line contains two parts.
                String[] parts = line.split(",");

                // if the line contains two parts, add the hash and malware name as a key-value pair in the signatures HashMap.
                if (parts.length == 2) {

                    String hash = parts[0].trim();
                    String malwareName = parts[1].trim();
                    signatures.put(hash, malwareName);
                }
            }
        }
        reader.close();
    }

    public String getMalwareNameByHash(String hash) {

        // if the hash exists in the signatures HashMap, return the associated malware name to be used in the signature identification process.
        if (signatures.containsKey(hash)) {
            return signatures.get(hash);
        } else {
            return null;
        }
    }
}