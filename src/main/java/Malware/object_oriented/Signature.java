package Malware.object_oriented;

public class Signature {

    /*
        * This class represents a single signature of malware, it contains the hash value and the associated malware name.
        * The Signature class encapsulates the hash value and malware name as private data members, providing public getter methods for accessing them.
        * Its purpose is to store the hash value and malware name as a single object that can be easily passed around to other classes and methods if malware is detected in a file and the malware hash and name is needed.
    
        ! Pseudo code:
        ? 0. Import all necessary libraries.
        ? 1. Create a Signature class with private data members:
            hash: Represents the hash value of the signature (private string).
            malwareName: Represents the name of the associated malware (private string).
    
        ? 2. Implement a constructor to initialize the hash and malwareName:
            The constructor takes two parameters: the hash value and the malware name.
            Assign the provided hash value to the hash data member.
            Assign the provided malware name to the malwareName data member.
    
        ? 3. Implement getter methods to retrieve the hash and malwareName:
            Create a getHash() method that returns the hash value.
            Create a getMalwareName() method that returns the malware name.
    */

    private String hash; // Represents the hash value of the signature.
    private String malwareName; // Represents the name of the associated malware.

    public Signature(String hash, String malwareName) {
        this.hash = hash; // this.hash refers to the private data member hash, while hash refers to the parameter hash.
        this.malwareName = malwareName; // this.malwareName refers to the private data member malwareName, while malwareName refers to the parameter malwareName.
    }

    // ? Getter methods to retrieve the hash and malwareName to be used in the SignatureDatabase class.
    public String getHash() {
        return hash;
    }

    public String getMalwareName() {
        return malwareName;
    }
}

// ! Done