import java.nio.file.*;
import java.util.Scanner;

import Malware.logic.MalwareAnalyzer;
import Malware.logic.SignatureDatabase;
import Malware.logic.SignatureIdentifier;
import Malware.logic.DirectoryMonitorService;

public class Main {
    public static void main(String[] args) {

        // Create an instance of the SignatureDatabase class
        SignatureDatabase signatureDatabase = new SignatureDatabase();

        signatureDatabase.loadSignaturesFromFile("src/main/java/resources/malware_hashes.csv");

        // Create a Scanner object for console input
        Scanner scanner = new Scanner(System.in);

        System.out.println("[INPUT] Please enter the path of the directory you want to monitor: ");
        String directoryPath = scanner.nextLine();

        if (!Files.isDirectory(Paths.get(directoryPath))) {
            System.err.println("[ERROR] Invalid directory path!");
            System.exit(1);
        }

        if (directoryPath == null || directoryPath.isEmpty()) {
            System.err.println("[ERROR] Invalid directory path!");
            System.exit(1);
        }

        // Create an instance of the SignatureIdentifier class
        SignatureIdentifier signatureIdentifier = new SignatureIdentifier(signatureDatabase, directoryPath);

        // Create an instance of the MalwareAnalyzer class
        MalwareAnalyzer malwareAnalyzer = new MalwareAnalyzer(signatureIdentifier);

        // Create an instance of the DirectoryMonitorService class
        DirectoryMonitorService directoryMonitorService = new DirectoryMonitorService(
                Paths.get(directoryPath),
                malwareAnalyzer,
                path -> !path.toString().endsWith(".crdownload")); // filter out .crdownload files

        Thread directoryMonitorThread = new Thread(directoryMonitorService);
        directoryMonitorThread.start();

        System.out.println("[INFO] MalwareHolmes is running, press Enter to stop it.");
        scanner.nextLine();
        directoryMonitorThread.interrupt();

        System.out.println("[!] MalwareHolmes stopped, see you next time!");
        scanner.close();

        signatureDatabase.printStatistics();
    }
}
