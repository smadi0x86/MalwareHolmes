package MalwareTest;

import Malware.logic.MalwareAnalyzer;
import Malware.logic.SignatureDatabase;
import Malware.logic.SignatureIdentifier;

import org.junit.Test;
import org.junit.Before;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.*;

public class BasicTests {

    private SignatureDatabase signatureDatabase;
    private MalwareAnalyzer malwareAnalyzer;

    @Before
    public void setUp() {
        signatureDatabase = new SignatureDatabase();
        SignatureIdentifier signatureIdentifier = new SignatureIdentifier(signatureDatabase);
        malwareAnalyzer = new MalwareAnalyzer(signatureIdentifier);
    }

    @Test
    public void testAnalyzeFile() {
        try {
            String analysisResult = malwareAnalyzer.analyzeFile("src/test/java/MalwareTest/analysis_test_file.txt");
            assertNotNull("Analysis result should not be null", analysisResult);
        } catch (Exception e) {
            fail("Exception should not have been thrown.");
        }
    }

    @Test
    public void testAnalyzeFileWithMalware() {
        try {
            String analysisResult = malwareAnalyzer
                    .analyzeFile("src/test/java/MalwareTest/analysis_test_file_with_malware.txt");
            assertNotNull("Analysis result should not be null", analysisResult);
            assertTrue("Analysis result should contain malware", analysisResult.contains("Malware"));
        } catch (Exception e) {
            fail("Exception should not have been thrown.");
        }
    }
}
