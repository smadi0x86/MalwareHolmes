package MalwareTest.objectorientedTest;

import org.junit.Test; // This is used to import where to find the test methods (@Test)
import static org.junit.Assert.fail; // This is used to import the assert methods which are used to test the code for any additional exceptions

import java.io.IOException;
import java.security.NoSuchAlgorithmException;

import Malware.object_oriented.MalwareAnalyzer;
import Malware.object_oriented.SignatureDatabase;
import Malware.object_oriented.SignatureIdentifier;

public class MalwareAnalyzerOOPTest {

    @Test
    public void testCalculateHash() {

        // Create an instance of SignatureDatabase (you may need to provide necessary dependencies or mock objects)
        SignatureDatabase signatureDatabase = new SignatureDatabase();

        // Create an instance of SignatureIdentifier (you may need to provide necessary dependencies or mock objects)
        SignatureIdentifier signatureIdentifier = new SignatureIdentifier(signatureDatabase);

        // Create an instance of MalwareAnalyzer with the SignatureIdentifier object
        MalwareAnalyzer malwareAnalyzer = new MalwareAnalyzer(signatureIdentifier);

        // Provide a test file path
        String filePath = "C:/Users/smadi/OneDrive/Desktop/HTU/Semester 2 Year 1/Programming/Assignment/Task2/maven-final-programming-quickpick/src/main/java/Malware/object_oriented/test.txt";

        try {
            // Call the calculateHash method
            String hash = malwareAnalyzer.calculateHash(filePath);
            System.out.println(hash);

            // ! catch the exception thrown from the calculateHash method 
        } catch (IOException | NoSuchAlgorithmException e) {
            // Handle any exceptions that may occur during the test
            fail("Test Error Catched: " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Test
    public void testCompareHash() {
        // Create an instance of SignatureDatabase (you may need to provide necessary dependencies or mock objects):

        SignatureDatabase SignatureDatabase = new SignatureDatabase();

        // Create an instance of SignatureIdentifier (you may need to provide necessary dependencies or mock objects):
        SignatureIdentifier SignatureIdentifier = new SignatureIdentifier(SignatureDatabase);

        // Create an instance of MalwareAnalyzer with the SignatureIdentifier object:
        MalwareAnalyzer MalwareAnalyzer = new MalwareAnalyzer(SignatureIdentifier);

        // Provide a test file path:
        String filePath = "C:/Users/smadi/OneDrive/Desktop/HTU/Semester 2 Year 1/Programming/Assignment/Task2/maven-final-programming-quickpick/src/main/java/Malware/object_oriented/test.txt";

        // Call the calculateHash method:
        try {
            // Call the calculateHash method:
            String hash = MalwareAnalyzer.calculateHash(filePath);
            System.out.println(hash);

        } catch (NoSuchAlgorithmException | IOException e) {
            fail("Test error catched: " + e.getMessage());
            e.printStackTrace();
        }

        // Call the compareHash method:
        SignatureIdentifier.compareHash(filePath);
    }

    // TODO: Add more test methods for other functionality of the MalwareAnalyzer class
}
