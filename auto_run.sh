#!/bin/bash

# Check if JDK is installed
if ! type "javac" > /dev/null; then
  echo "JDK is not installed. Please install it and try again."
  exit 1
fi

# Check if Maven is installed
if ! type "mvn" > /dev/null; then
  echo "Maven is not installed. Please install it and try again."
  exit 1
fi

# Check if GCC is installed
if ! type "gcc" > /dev/null; then
  echo "GCC is not installed. Please install it and try again."
  exit 1
fi

# Check if Docker is installed
if ! type "docker" > /dev/null; then
  echo "Docker is not installed. Please install it and try again."
  exit 1
fi

# Assume that the JDK is installed under the JAVA_HOME environment variable
if [ -z "$JAVA_HOME" ]; then
    echo "JAVA_HOME is not set. Please set it to your JDK installation path."
    exit 1
fi

# Project path is the current working directory
project_path=$(pwd)

# Compile the native C code
# cd src/main/java/Malware/logic/peAnalysis
# gcc -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/win32" -shared -o peAnalysis.dll peAnalysis.c pemetaData.c

# cd ../staticAnalysis
# gcc -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/win32" -shared -o staticAnalysis.dll staticAnalysis.c

# # Move DLLs to the main directory
# mv peAnalysis.dll "$project_path/src/main/java"
# mv staticAnalysis.dll "$project_path/src/main/java"

# Go back to the project root directory
cd "$project_path"

#  run the redis docker container
docker run --name malwareHolmes-redis -d -p 6379:6379 redis

echo "Waiting for Redis to start..."

# Wait for a while to make sure Redis is ready
sleep 5

echo "Redis is ready. Building the project..."

# Build the Maven project
mvn clean package

# Run the JAR file
java -Djava.library.path="src/main/java" -jar target/maven-final-programming-quickpick-1.0-SNAPSHOT-jar-with-dependencies.jar
